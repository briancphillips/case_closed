@tailwind base;
@tailwind components;
@tailwind utilities;

/* You can add any global styles here if needed */
body {
  margin: 0;
  /* The background is already set in index.html style for faster initial paint,
     but you could manage it here too if you prefer. */
  background-color: #111827; /* bg-gray-900 */
  overflow: hidden; /* Prevent scrollbars during slide transition */
}

#root {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative; /* For positioning animated children if needed */
  overflow: hidden; /* Crucial to clip the sliding image */
}

/* Theme color utility classes */
@layer utilities {
  .bg-primary {
    background-color: var(--primary-color);
  }
  .bg-secondary {
    background-color: var(--secondary-color);
  }
  .bg-tertiary {
    background-color: var(--tertiary-color);
  }
  .bg-quaternary {
    background-color: var(--quaternary-color);
  }
  .bg-quinary {
    background-color: var(--quinary-color);
  }

  .text-primary {
    color: var(--primary-color);
  }
  .text-secondary {
    color: var(--secondary-color);
  }
  .text-tertiary {
    color: var(--tertiary-color);
  }
  .text-quaternary {
    color: var(--quaternary-color);
  }
  .text-quinary {
    color: var(--quinary-color);
  }

  .border-primary {
    border-color: var(--primary-color);
  }
  .border-secondary {
    border-color: var(--secondary-color);
  }
  .border-tertiary {
    border-color: var(--tertiary-color);
  }
  .border-quaternary {
    border-color: var(--quaternary-color);
  }
  .border-quinary {
    border-color: var(--quinary-color);
  }
}

@keyframes slideInFromRight {
  from {
    transform: translateX(100%) scale(0.95);
    opacity: 0;
  }
  to {
    transform: translateX(0%) scale(1);
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInSimple {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOutSimple {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Updated for "Next" button - Enters from Right */
@keyframes slideLeftEnterNext {
  from {
    transform: translateX(100%);
    opacity: 1;
  }
  to {
    transform: translateX(0%);
    opacity: 1;
  }
}

/* Updated for "Next" button - Exits to Left */
@keyframes slideLeftExitNext {
  from {
    transform: translateX(0%);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}

/* Added for "Previous" button - Enters from Left */
@keyframes slideRightEnterPrev {
  from {
    transform: translateX(-100%);
    opacity: 1;
  }
  to {
    transform: translateX(0%);
    opacity: 1;
  }
}

/* Added for "Previous" button - Exits to Right */
@keyframes slideRightExitPrev {
  from {
    transform: translateX(0%);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

@keyframes zoomInEnter {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes zoomInExit {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(1.5);
  }
}

.image-slide-transition {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: none; /* Disable old animation if it exists */
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

.image-container {
  position: relative;
  width: 100%;
  height: 100%;
  background: transparent;
  /* Remove overflow: hidden as it can clip slide transitions */
  /* overflow: hidden; */
  box-sizing: border-box;
  transform: translateZ(0);
  will-change: transform, opacity;
  backface-visibility: hidden;
}

/* SLIDE TRANSITION STYLES */
.slide-container {
  position: relative; /* For positioning slides on top of each other */
  width: 100%;
  height: 100%;
  overflow: visible !important; /* Allow slides to move outside container during transitions */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1; /* Ensure it's above the background but below navigation buttons */
}

.slide {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transform: scale(1);
  transition: opacity 1s ease-in-out, transform 1s ease-in-out;
  will-change: transform, opacity;
  pointer-events: none; /* Let clicks pass through to the slide-container */
}

.slide.active {
  opacity: 1;
  z-index: 2; /* Ensure active slide is on top */
  pointer-events: auto; /* Enable clicks for active slide */
}

.slide.exiting {
  opacity: 0;
  z-index: 1; /* Ensure exiting slide is behind new active slide */
  pointer-events: none;
}

/* Default (None) - very quick fade */
.transition-none.slide {
  transition-duration: 0.1s !important; /* Override with higher specificity */
}

/* Fade Transition */
.transition-fade.slide {
  opacity: 0; /* Initial state */
  transition: none; /* Override base slide transition */
}
.transition-fade.slide.active {
  animation: fadeInSimple 1s ease-in-out forwards;
}
.transition-fade.slide.exiting {
  animation: fadeOutSimple 1s ease-in-out forwards;
}

/* Slide Left Transition (used for NEXT) */
.transition-slide-left.slide {
  opacity: 0; /* Initial state before active/exiting applies animation */
  transition: none; /* Override base slide transition */
}
.transition-slide-left.slide.active {
  animation: slideLeftEnterNext 1.5s cubic-bezier(0.33, 1, 0.68, 1) forwards;
}
.transition-slide-left.slide.exiting {
  animation: slideLeftExitNext 1.5s cubic-bezier(0.33, 1, 0.68, 1) forwards;
}

/* Slide Right Transition (used for PREVIOUS when 'Slide Left' is selected) */
.transition-slide-right.slide {
  opacity: 0; /* Initial state before active/exiting applies animation */
  transition: none; /* Override base slide transition */
}
.transition-slide-right.slide.active {
  animation: slideRightEnterPrev 1.5s cubic-bezier(0.33, 1, 0.68, 1) forwards;
}
.transition-slide-right.slide.exiting {
  animation: slideRightExitPrev 1.5s cubic-bezier(0.33, 1, 0.68, 1) forwards;
}

/* Zoom In Transition */
.transition-zoom-in.slide {
  opacity: 0; /* Initial state before animation */
  transition: none; /* Override base slide transition */
  /* Remove transition, will be handled by animation property */
}
.transition-zoom-in.slide.active {
  /* opacity: 1; Ensure opacity is 1 at the end of the animation */
  animation: zoomInEnter 1.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  /* transform: scale(1); Ensure final transform is correct */
}
.transition-zoom-in.slide.exiting {
  /* opacity: 0; Ensure opacity is 0 at the end of the animation */
  animation: zoomInExit 1.5s ease-in-out forwards;
  /* transform: scale(1.5); Ensure final transform is correct, though animation handles it */
}

/* THE FOLLOWING DUPLICATED/OLD RULES WILL BE REMOVED */
